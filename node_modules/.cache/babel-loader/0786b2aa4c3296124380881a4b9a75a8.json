{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\thinkful\\\\assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\home\\\\DeckCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { createDeck } from \"../utils/api/index.js\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeckCreate = () => {\n  _s();\n\n  const initialDeckState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [deck, setDeck] = useState({ ...initialDeckState\n  });\n  const history = useHistory();\n\n  const changeHandler = event => {\n    setDeck({ ...deck,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    await createDeck(deck); // TODO: send user to Deck screen\n\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"+Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            name: \"name\",\n            type: \"text\",\n            required: true,\n            value: deck.name,\n            maxLength: \"100\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            required: true,\n            rows: \"3\",\n            maxLength: \"500\",\n            value: deck.description,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"item\",\n            onClick: () => history.push(\"/\"),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"item\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeckCreate, \"2JcHCNdQHr2qeyuphnV2nLAVkco=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckCreate;\nexport default DeckCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckCreate\");","map":{"version":3,"sources":["C:/Users/TI/thinkful/assignments/Project_Flashcards_Qualified_1/src/home/DeckCreate.js"],"names":["React","useState","createDeck","useHistory","Link","DeckCreate","initialDeckState","name","description","deck","setDeck","history","changeHandler","event","target","value","submitHandler","preventDefault","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { createDeck } from \"../utils/api/index.js\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nexport const DeckCreate = () => {\r\n  const initialDeckState = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n  const [deck, setDeck] = useState({ ...initialDeckState });\r\n  const history = useHistory();\r\n\r\n  const changeHandler = (event) => {\r\n    setDeck({\r\n      ...deck,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    await createDeck(deck);\r\n\r\n    // TODO: send user to Deck screen\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <nav>\r\n        <Link to=\"/\">Home</Link>\r\n        {\" / \"}\r\n        <span>+Create Deck</span>\r\n      </nav>\r\n      <h3>Create Deck</h3>\r\n      <form onSubmit={submitHandler}>\r\n        <fieldset>\r\n          <div>\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              required={true}\r\n              value={deck.name}\r\n              maxLength=\"100\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              required={true}\r\n              rows=\"3\"\r\n              maxLength=\"500\"\r\n              value={deck.description}\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"group-row\">\r\n            <button className=\"item\" onClick={() => history.push(\"/\")}>\r\n              Cancel\r\n            </button>\r\n            <button className=\"item\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeckCreate;"]},"metadata":{},"sourceType":"module"}