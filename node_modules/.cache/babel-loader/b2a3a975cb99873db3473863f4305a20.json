{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\Thinkful\\\\qualified-challenges\\\\project-flashcards\\\\src\\\\deck\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { readCard, updateCard, readDeck } from \"../utils/api/index.js\";\nimport CardForm from \"./CardForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditCard = props => {\n  _s();\n\n  const initialCardState = {\n    front: \"\",\n    back: \"\"\n  };\n  const [card, setCard] = useState({ ...initialCardState\n  });\n  const {\n    deck,\n    setDeck\n  } = props;\n  const history = useHistory();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const isNewCard = false;\n  useEffect(() => {\n    const abortController = new AbortController();\n    readCard(cardId, abortController.signal).then(setCard);\n    return () => abortController.abort();\n  }, [cardId]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setDeck);\n    return () => abortController.abort();\n  }, [deckId, setDeck]);\n\n  const changeHandler = event => {\n    setCard({ ...card,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    await updateCard(card);\n    history.push(`/decks/${deckId}`);\n  };\n\n  if (deck.name) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Edit Card \", cardId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row card-body\",\n        children: /*#__PURE__*/_jsxDEV(CardForm, {\n          history: history,\n          isNewCard: isNewCard,\n          card: card,\n          deckId: deckId,\n          changeHandler: changeHandler,\n          submitHandler: submitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(EditCard, \"0wGUX9rTnV5YMdhd0mr+ijmaGZU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["C:/Users/TI/Thinkful/qualified-challenges/project-flashcards/src/deck/EditCard.js"],"names":["React","useState","useEffect","useHistory","useParams","Link","readCard","updateCard","readDeck","CardForm","EditCard","props","initialCardState","front","back","card","setCard","deck","setDeck","history","deckId","cardId","isNewCard","abortController","AbortController","signal","then","abort","changeHandler","event","target","name","value","submitHandler","preventDefault","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { readCard, updateCard, readDeck } from \"../utils/api/index.js\";\r\nimport CardForm from \"./CardForm.js\";\r\n\r\nexport const EditCard = (props) => {\r\n  const initialCardState = {\r\n    front: \"\",\r\n    back: \"\",\r\n  };\r\n  const [card, setCard] = useState({ ...initialCardState });\r\n  const { deck, setDeck } = props;\r\n  const history = useHistory();\r\n  const { deckId, cardId } = useParams();\r\n  const isNewCard = false;\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readCard(cardId, abortController.signal).then(setCard);\r\n\r\n    return () => abortController.abort();\r\n  }, [cardId]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setDeck);\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId, setDeck]);\r\n\r\n  const changeHandler = (event) => {\r\n    setCard({\r\n      ...card,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    await updateCard(card);\r\n    history.push(`/decks/${deckId}`);\r\n  };\r\n\r\n  if (deck.name) {\r\n    return (\r\n        <section className=\"container\">\r\n                <nav className=\"breadcrumb\">\r\n                    <Link to=\"/\">Home</Link>\r\n                    {\" / \"}\r\n                    <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n                    {\" / \"}\r\n                    <span>Edit Card {cardId}</span>\r\n                </nav>\r\n                <h2>Edit Card</h2>\r\n            <div className=\"row card-body\">\r\n                <CardForm\r\n                    history={history}\r\n                    isNewCard={isNewCard}\r\n                    card={card}\r\n                    deckId={deckId}\r\n                    changeHandler={changeHandler}\r\n                    submitHandler={submitHandler}\r\n                />\r\n            </div>\r\n        </section>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}