{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\thinkful\\\\assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\home\\\\DeckList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { listDecks } from \"../../utils/api/index\";\nimport DeckDescription from \"./DeckDescription\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeckList = () => {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks);\n    return () => abortController.abort();\n  }, []);\n  const list = decks.map(deck => /*#__PURE__*/_jsxDEV(DeckDescription, {\n    deckId: deck.id,\n    name: deck.name,\n    description: deck.description,\n    amount: deck.cards.length\n  }, deck.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"group mt-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeckList, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["C:/Users/TI/thinkful/assignments/Project_Flashcards_Qualified_1/src/Layout/home/DeckList.js"],"names":["React","useEffect","useState","listDecks","DeckDescription","DeckList","decks","setDecks","abortController","AbortController","signal","then","abort","list","map","deck","id","name","description","cards","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AAEAN,IAAAA,SAAS,CAACK,eAAe,CAACE,MAAjB,CAAT,CAAkCC,IAAlC,CAAuCJ,QAAvC;AAEA,WAAO,MAAMC,eAAe,CAACI,KAAhB,EAAb;AACH,GANQ,EAMN,EANM,CAAT;AASA,QAAMC,IAAI,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACnB,QAAC,eAAD;AAEI,IAAA,MAAM,EAAEA,IAAI,CAACC,EAFjB;AAGI,IAAA,IAAI,EAAED,IAAI,CAACE,IAHf;AAII,IAAA,WAAW,EAAEF,IAAI,CAACG,WAJtB;AAKI,IAAA,MAAM,EAAEH,IAAI,CAACI,KAAL,CAAWC;AALvB,KACSL,IAAI,CAACE,IADd;AAAA;AAAA;AAAA;AAAA,UADS,CAAb;AAWA,sBACI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBJ;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhCM;;GAAMR,Q;;KAAAA,Q;AAkCb,eAAeA,QAAf","sourcesContent":["import React,{ useEffect, useState } from \"react\";\r\nimport { listDecks } from \"../../utils/api/index\";\r\nimport DeckDescription from \"./DeckDescription\";\r\n\r\n\r\nexport const DeckList = () => {\r\n    const [decks, setDecks] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n\r\n        listDecks(abortController.signal).then(setDecks);\r\n\r\n        return () => abortController.abort();\r\n    }, []);\r\n\r\n    \r\n    const list = decks.map((deck) => (\r\n        <DeckDescription \r\n            key={deck.name} \r\n            deckId={deck.id}\r\n            name={deck.name} \r\n            description={deck.description} \r\n            amount={deck.cards.length}\r\n        />\r\n    ));\r\n    \r\n\r\n    return (\r\n        <section className=\"group mt-2\">\r\n            <div className=\"group\">\r\n                <div className=\"group\">{list}</div>\r\n                \r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default DeckList;"]},"metadata":{},"sourceType":"module"}