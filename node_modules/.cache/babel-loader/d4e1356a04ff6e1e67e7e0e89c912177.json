{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\thinkful\\\\assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\deck\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditDeck = props => {\n  _s();\n\n  const {\n    deck,\n    setDeck\n  } = props;\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setDeck);\n    return () => abortController.abort();\n  }, [deckId, setDeck]);\n\n  const changeHandler = event => {\n    setDeck({ ...deck,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    await updateDeck(deck);\n    history.push(`/decks/${deckId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"card-body\",\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"name\",\n              name: \"name\",\n              type: \"text\",\n              required: true,\n              value: deck.name,\n              maxLength: \"100\",\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              required: true,\n              rows: \"3\",\n              maxLength: \"500\",\n              value: deck.description,\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"item\",\n              onClick: () => history.push(`/decks/${deckId}`),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"item\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditDeck, \"NUXGbQPRbauGB9/l0mhTkvsgWDI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/TI/thinkful/assignments/Project_Flashcards_Qualified_1/src/deck/EditDeck.js"],"names":["React","useEffect","useHistory","useParams","Link","readDeck","updateDeck","EditDeck","props","deck","setDeck","history","deckId","abortController","AbortController","signal","then","abort","changeHandler","event","target","name","value","submitHandler","preventDefault","push","description"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"../utils/api/index.js\";\r\n\r\nexport const EditDeck = (props) => {\r\n  const { deck, setDeck } = props;\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setDeck);\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId, setDeck]);\r\n\r\n  const changeHandler = (event) => {\r\n    setDeck({\r\n      ...deck,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    await updateDeck(deck);\r\n    history.push(`/decks/${deckId}`);\r\n  };\r\n\r\n  return (\r\n    <section className=\"container\">\r\n        <div>\r\n            <nav>\r\n                <Link to=\"/\">Home</Link>\r\n                {\" / \"}\r\n                <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n                {\" / \"}\r\n                <span>Edit Deck</span>\r\n            </nav>\r\n            <h2>Edit Deck</h2>\r\n            <form className=\"card-body\" onSubmit={submitHandler}>\r\n                <fieldset>\r\n                    <div className=\"row\">\r\n                        <label htmlFor=\"name\">Name :</label>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            required={true}\r\n                            value={deck.name}\r\n                            maxLength=\"100\"\r\n                            onChange={changeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <label htmlFor=\"description\">Description :</label>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <textarea\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            required={true}\r\n                            rows=\"3\"\r\n                            maxLength=\"500\"\r\n                            value={deck.description}\r\n                            onChange={changeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"group-row\">\r\n                        <button\r\n                            className=\"item\"\r\n                            onClick={() => history.push(`/decks/${deckId}`)}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        <button className=\"item\" type=\"submit\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditDeck;"]},"metadata":{},"sourceType":"module"}