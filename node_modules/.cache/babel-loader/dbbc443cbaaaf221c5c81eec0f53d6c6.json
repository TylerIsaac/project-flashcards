{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\thinkful\\\\assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\deck\\\\DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { readDeck, deleteDeck } from \"../utils/api/index.js\";\nimport CardList from \"./CardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeckView = props => {\n  _s();\n\n  const {\n    deck,\n    setDeck\n  } = props;\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setDeck);\n    return () => abortController.abort();\n  }, [deckId, setDeck]);\n\n  const deckDeleteHandler = async deckId => {\n    const result = window.confirm(\"Delete this deck? You will not be able to recover it.\");\n\n    if (result) {\n      await deleteDeck(deckId);\n      history.push(\"/\");\n    }\n  };\n\n  const refreshDeck = async () => {\n    const updatedDeck = await readDeck(deckId);\n    setDeck(updatedDeck);\n  };\n\n  if (deck.id) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: deck.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: deck.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col align-items-evenly\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-secondary btn-sm\",\n                    onClick: () => history.push(`/decks/${deckId}/edit`),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-sm\",\n                    onClick: () => history.push(`/decks/${deckId}/study`),\n                    children: \"Study\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-sm\",\n                    onClick: () => history.push(`/decks/${deckId}/cards/new`),\n                    children: \"Add Cards\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger btn-sm\",\n                    onClick: () => deckDeleteHandler(deckId),\n                    children: \"\\uD83D\\uDDD1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardList, {\n          cards: deck.cards,\n          deckId: deckId,\n          refreshDeck: refreshDeck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(DeckView, \"MK1JtvbBHVhJC8v8jZJsdEhZIHc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["C:/Users/TI/thinkful/assignments/Project_Flashcards_Qualified_1/src/deck/DeckView.js"],"names":["React","useEffect","useParams","useHistory","Link","readDeck","deleteDeck","CardList","DeckView","props","deck","setDeck","deckId","history","abortController","AbortController","signal","then","abort","deckDeleteHandler","result","window","confirm","push","refreshDeck","updatedDeck","id","name","description","cards"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { readDeck, deleteDeck } from \"../utils/api/index.js\";\r\nimport CardList from \"./CardList\";\r\n\r\nexport const DeckView = (props) => {\r\n  const { deck, setDeck } = props;\r\n  const { deckId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setDeck);\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId, setDeck]);\r\n\r\n  const deckDeleteHandler = async (deckId) => {\r\n    const result = window.confirm(\r\n      \"Delete this deck? You will not be able to recover it.\"\r\n    );\r\n    if (result) {\r\n      await deleteDeck(deckId);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const refreshDeck = async () => {\r\n    const updatedDeck = await readDeck(deckId);\r\n    setDeck(updatedDeck);\r\n  };\r\n\r\n  if (deck.id) {\r\n    return (\r\n      <section>\r\n        <div className=\"container\">\r\n          <div>\r\n            <nav>\r\n              <Link to=\"/\">Home</Link>\r\n              {\" / \"}\r\n              <span>{deck.name}</span>\r\n            </nav>\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h3>{deck.name}</h3>\r\n                <p>{deck.description}</p>\r\n                <div className=\"row\">\r\n                    <div className=\"col align-items-evenly\">\r\n                        <button\r\n                            className=\"btn btn-secondary btn-sm\"\r\n                            onClick={() => history.push(`/decks/${deckId}/edit`)}\r\n                            >\r\n                            Edit\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={() => history.push(`/decks/${deckId}/study`)}\r\n                            >\r\n                            Study\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={() => history.push(`/decks/${deckId}/cards/new`)}\r\n                            >\r\n                            Add Cards\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-danger btn-sm\"\r\n                            onClick={() => deckDeleteHandler(deckId)}\r\n                            >\r\n                            🗑\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h2>Cards</h2>\r\n          <hr></hr>\r\n          <CardList\r\n            cards={deck.cards}\r\n            deckId={deckId}\r\n            refreshDeck={refreshDeck}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default DeckView;"]},"metadata":{},"sourceType":"module"}