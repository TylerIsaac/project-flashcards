{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\thinkful\\\\assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\home\\\\Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport readDeck from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deck() {\n  _s();\n\n  const [deck, setDeck] = useState();\n  /*\r\n      useEffect (() => {\r\n          const abortController = new AbortController();\r\n  \r\n          readDeck(abortController.signal).then(setDeck);\r\n  \r\n          return () => abortController.abort();\r\n      }, []);\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      children: \"Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Deck, \"p2uzW5XoHtsZaBqUgcWBjrK1NNU=\");\n\n_c = Deck;\n;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["C:/Users/TI/thinkful/assignments/Project_Flashcards_Qualified_1/src/Layout/home/Deck.js"],"names":["React","useState","Route","readDeck","Deck","deck","setDeck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,sBACI;AAAA,2BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlBQG,I;;KAAAA,I;AAkBR;AAED,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport readDeck from \"../../utils/api/index\";\r\n\r\nfunction Deck() {\r\n    const [deck, setDeck] = useState();\r\n/*\r\n    useEffect (() => {\r\n        const abortController = new AbortController();\r\n\r\n        readDeck(abortController.signal).then(setDeck);\r\n\r\n        return () => abortController.abort();\r\n    }, []);\r\n*/\r\n    return (\r\n        <div>\r\n            <Route>\r\n                Deck\r\n            </Route>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Deck;"]},"metadata":{},"sourceType":"module"}