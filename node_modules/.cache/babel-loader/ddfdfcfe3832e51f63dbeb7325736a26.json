{"ast":null,"code":"import _slicedToArray from\"C:/Users/TI/Thinkful/assignments/Project_Flashcards_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useParams,Link,useHistory}from\"react-router-dom\";import{readDeck}from\"../utils/api/index.js\";import StudyCardFront from\"./StudyCardFront\";import StudyCardBack from\"./StudyCardBack\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Study=function Study(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),deck=_useState2[0],setDeck=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentCardIndex=_useState4[0],setCurrentCardIndex=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),showFront=_useState6[0],setShowFront=_useState6[1];var _useParams=useParams(),deckId=_useParams.deckId;var history=useHistory();useEffect(function(){var abortController=new AbortController();readDeck(deckId,abortController.signal).then(setDeck);return function(){return abortController.abort();};},[deckId]);var nextCard=function nextCard(){if(currentCardIndex<deck.cards.length-1){setCurrentCardIndex(function(currentValue){return currentValue+1;});setShowFront(true);}else{handleRestart();}};var handleRestart=function handleRestart(){var result=window.confirm(\"Restart cards? Click 'cancel' to return to the home page.\");if(result){setCurrentCardIndex(0);setShowFront(true);}else{history.push(\"/\");}};var flipCard=function flipCard(){setShowFront(function(currentValue){return!currentValue;});};if(deck.name){return/*#__PURE__*/_jsxs(\"section\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"}),\" / \",/*#__PURE__*/_jsx(Link,{to:\"/decks/\".concat(deckId),children:deck.name}),\" / \",/*#__PURE__*/_jsx(\"span\",{children:\"Study\"})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"i\",{children:deck.name}),\" : Study\"]}),/*#__PURE__*/_jsx(\"div\",{children:deck.cards.length<=2?/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Not enough cards.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"You need at least 3 cards to study. There are \",deck.cards.length,\" \",\"cards in this deck\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-sm\",onClick:function onClick(){return history.push(\"/decks/\".concat(deckId,\"/cards/new\"));},children:\"Add Cards\"})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Card \",currentCardIndex+1,\" of \",deck.cards.length]}),showFront?/*#__PURE__*/_jsx(StudyCardFront,{currentCard:deck.cards[currentCardIndex],flipCard:flipCard}):/*#__PURE__*/_jsx(StudyCardBack,{currentCard:deck.cards[currentCardIndex],flipCard:flipCard,nextCard:nextCard})]})})})]});}else{return null;}};export default Study;","map":{"version":3,"sources":["C:/Users/TI/thinkful/assignments/Project_Flashcards_Qualified_1/src/study/Study.js"],"names":["React","useEffect","useState","useParams","Link","useHistory","readDeck","StudyCardFront","StudyCardBack","Study","deck","setDeck","currentCardIndex","setCurrentCardIndex","showFront","setShowFront","deckId","history","abortController","AbortController","signal","then","abort","nextCard","cards","length","currentValue","handleRestart","result","window","confirm","push","flipCard","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api/index.js\";\r\nimport StudyCardFront from \"./StudyCardFront\";\r\nimport StudyCardBack from \"./StudyCardBack\";\r\n\r\nexport const Study = () => {\r\n  const [deck, setDeck] = useState([]);\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n  const [showFront, setShowFront] = useState(true);\r\n  const { deckId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setDeck);\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  const nextCard = () => {\r\n    if (currentCardIndex < deck.cards.length - 1) {\r\n      setCurrentCardIndex((currentValue) => currentValue + 1);\r\n      setShowFront(true);\r\n    } else {\r\n      handleRestart();\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    const result = window.confirm(\r\n      \"Restart cards? Click 'cancel' to return to the home page.\"\r\n    );\r\n    if (result) {\r\n      setCurrentCardIndex(0);\r\n      setShowFront(true);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const flipCard = () => {\r\n    setShowFront((currentValue) => !currentValue);\r\n  };\r\n\r\n  if (deck.name) {\r\n    return (\r\n      <section className=\"container\">\r\n        <nav className=\"breadcrumb\">\r\n          <Link to=\"/\">Home</Link>\r\n          {\" / \"}\r\n          <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n          {\" / \"}\r\n          <span>Study</span>\r\n        </nav>\r\n        <h2>\r\n            <i>{deck.name}</i> : Study\r\n        </h2>\r\n        <div>\r\n            {deck.cards.length <= 2 ? (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h3>Not enough cards.</h3>\r\n                    <p>\r\n                    You need at least 3 cards to study. There are {deck.cards.length}{\" \"}\r\n                    cards in this deck\r\n                    </p>\r\n                    <button className=\"btn btn-secondary btn-sm\" onClick={() => history.push(`/decks/${deckId}/cards/new`)}>\r\n                    Add Cards\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            ) : (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h4>\r\n                    Card {currentCardIndex + 1} of {deck.cards.length}\r\n                    </h4>\r\n                    {showFront ? (\r\n                    <StudyCardFront\r\n                        currentCard={deck.cards[currentCardIndex]}\r\n                        flipCard={flipCard}\r\n                    />\r\n                    ) : (\r\n                    <StudyCardBack\r\n                        currentCard={deck.cards[currentCardIndex]}\r\n                        flipCard={flipCard}\r\n                        nextCard={nextCard}\r\n                    />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )}\r\n        </div>\r\n      </section>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}