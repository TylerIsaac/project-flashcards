{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\thinkful\\\\assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\deck\\\\AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { createCard, readDeck } from \"../utils/api/index.js\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport CardForm from \"./CardForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddCard = props => {\n  _s();\n\n  const initialCardState = {\n    front: \"\",\n    back: \"\"\n  };\n  const [card, setCard] = useState({ ...initialCardState\n  });\n  const {\n    deck,\n    setDeck\n  } = props;\n  const isNewCard = true;\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setDeck);\n    return () => abortController.abort();\n  }, [deckId, setDeck]);\n\n  const changeHandler = event => {\n    setCard({ ...card,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    await createCard(deckId, card);\n    setCard({ ...initialCardState\n    });\n  };\n\n  if (deck.name) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), \" : Add Card\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n            history: history,\n            isNewCard: isNewCard,\n            card: card,\n            deckId: deckId,\n            changeHandler: changeHandler,\n            submitHandler: submitHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(AddCard, \"ZubZAokcfQZRjeuMM+bzG+KlZn8=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["C:/Users/TI/thinkful/assignments/Project_Flashcards_Qualified_1/src/deck/AddCard.js"],"names":["React","useState","useEffect","createCard","readDeck","useHistory","useParams","Link","CardForm","AddCard","props","initialCardState","front","back","card","setCard","deck","setDeck","isNewCard","history","deckId","abortController","AbortController","signal","then","abort","changeHandler","event","target","name","value","submitHandler","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { createCard, readDeck } from \"../utils/api/index.js\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport CardForm from \"./CardForm.js\";\r\n\r\nexport const AddCard = (props) => {\r\n  const initialCardState = {\r\n    front: \"\",\r\n    back: \"\",\r\n  };\r\n  const [card, setCard] = useState({ ...initialCardState });\r\n  const { deck, setDeck } = props;\r\n  const isNewCard = true;\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setDeck);\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId, setDeck]);\r\n\r\n  const changeHandler = (event) => {\r\n    setCard({\r\n      ...card,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    await createCard(deckId, card);\r\n    setCard({ ...initialCardState });\r\n  };\r\n\r\n  if (deck.name) {\r\n    return (\r\n        <section>\r\n            <div className=\"container\">\r\n                <nav className=\"breadcrumb\">\r\n                    <Link to=\"/\">Home</Link>\r\n                    {\" / \"}\r\n                    <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n                    {\" / \"}\r\n                    <span>Add Card</span>\r\n                </nav>\r\n                <div>\r\n                    <h2>\r\n                        <i>{deck.name}</i> : Add Card\r\n                    </h2>\r\n                    <CardForm\r\n                        history={history}\r\n                        isNewCard={isNewCard}\r\n                        card={card}\r\n                        deckId={deckId}\r\n                        changeHandler={changeHandler}\r\n                        submitHandler={submitHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}